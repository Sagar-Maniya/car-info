# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# Trigger only on the 'main' branch and in the WebApi directory
trigger:
  branches:
    include:
    - main
  paths:
    include:
    - 'WebApi/*'

# Define the pipeline pool and variables
pool:
  vmImage: 'windows-latest'
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

# Steps in the pipeline
steps:
  # Install NuGet
  - task: NuGetToolInstaller@1

  # Restore NuGet packages
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  # Build the solution using Visual Studio
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  # Run the tests
  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  # Script to check if there are any changes in the WebApi directory
  - script: |
      git diff --name-only HEAD HEAD~1 | grep 'WebApi/' || echo "##vso[task.setvariable variable=skipArtifact;isOutput=true]true"
    name: checkChanges
    displayName: 'Check for changes in WebApi directory'

  # Publish Build Artifacts
  - task: PublishBuildArtifacts@1
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['checkChanges.skipArtifact'], 'true'))
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      ArtifactName: 'drop'
      publishLocation: 'Container'
